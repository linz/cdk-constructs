{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"aws-sdk\"","webpack:///./src/lambdas/ecs-deployment-group/index.ts"],"names":[],"mappings":"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","file":"ecs-deployment-group/index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = require(\"aws-sdk\");","import type {\r\n  CloudFormationCustomResourceEvent,\r\n  CloudFormationCustomResourceCreateEvent,\r\n  CloudFormationCustomResourceUpdateEvent,\r\n  CloudFormationCustomResourceDeleteEvent,\r\n} from 'aws-lambda';\r\nimport { CodeDeploy } from 'aws-sdk';\r\n\r\nenum RollbackEvent {\r\n  DEPLOYMENT_FAILURE = 'DEPLOYMENT_FAILURE',\r\n  DEPLOYMENT_STOP_ON_ALARM = 'DEPLOYMENT_STOP_ON_ALARM',\r\n  DEPLOYMENT_STOP_ON_REQUEST = 'DEPLOYMENT_STOP_ON_REQUEST',\r\n}\r\n\r\ninterface HandlerReturn {\r\n  PhysicalResourceId: string;\r\n}\r\n\r\nexport interface EcsDeploymentGroupProps {\r\n  applicationName: string;\r\n  deploymentGroupName: string;\r\n  serviceRoleArn: string;\r\n  ecsServices: CodeDeploy.ECSServiceList;\r\n  targetGroupNames: string[];\r\n  prodTrafficListenerArn: string;\r\n  testTrafficListenerArn: string;\r\n  terminationWaitTimeInMinutes: number;\r\n  autoRollbackOnEvents?: RollbackEvent[];\r\n  deploymentConfigName?: string;\r\n}\r\n\r\nconst codeDeploy = new CodeDeploy();\r\n\r\nconst getProperties = (\r\n  props: CloudFormationCustomResourceEvent['ResourceProperties'] | CloudFormationCustomResourceUpdateEvent['OldResourceProperties'],\r\n): EcsDeploymentGroupProps => ({\r\n  applicationName: props.ApplicationName,\r\n  deploymentGroupName: props.DeploymentGroupName,\r\n  serviceRoleArn: props.ServiceRoleArn,\r\n  ecsServices: props.EcsServices.map(({ ClusterName, ServiceName }: { ClusterName: string; ServiceName: string }) => ({\r\n    clusterName: ClusterName,\r\n    serviceName: ServiceName,\r\n  })),\r\n  targetGroupNames: props.TargetGroupNames,\r\n  prodTrafficListenerArn: props.ProdTrafficListenerArn,\r\n  testTrafficListenerArn: props.TestTrafficListenerArn,\r\n  terminationWaitTimeInMinutes: props.TerminationWaitTimeInMinutes,\r\n  autoRollbackOnEvents: props.AutoRollbackOnEvents,\r\n  deploymentConfigName: props.DeploymentConfigName,\r\n});\r\n\r\nconst onCreate = async (event: CloudFormationCustomResourceCreateEvent): Promise<HandlerReturn> => {\r\n  const {\r\n    applicationName,\r\n    deploymentGroupName,\r\n    serviceRoleArn,\r\n    ecsServices,\r\n    targetGroupNames,\r\n    prodTrafficListenerArn,\r\n    testTrafficListenerArn,\r\n    terminationWaitTimeInMinutes,\r\n    autoRollbackOnEvents,\r\n    deploymentConfigName,\r\n  } = getProperties(event.ResourceProperties);\r\n\r\n  await codeDeploy\r\n    .createDeploymentGroup({\r\n      applicationName,\r\n      deploymentGroupName,\r\n      serviceRoleArn,\r\n      ecsServices,\r\n      loadBalancerInfo: {\r\n        targetGroupPairInfoList: [\r\n          {\r\n            prodTrafficRoute: {\r\n              listenerArns: [prodTrafficListenerArn],\r\n            },\r\n            testTrafficRoute: {\r\n              listenerArns: [testTrafficListenerArn],\r\n            },\r\n            targetGroups: targetGroupNames.map((name) => ({\r\n              name,\r\n            })),\r\n          },\r\n        ],\r\n      },\r\n      autoRollbackConfiguration: {\r\n        enabled: !!autoRollbackOnEvents,\r\n        events: autoRollbackOnEvents,\r\n      },\r\n      blueGreenDeploymentConfiguration: {\r\n        terminateBlueInstancesOnDeploymentSuccess: {\r\n          action: 'TERMINATE',\r\n          terminationWaitTimeInMinutes,\r\n        },\r\n        deploymentReadyOption: {\r\n          actionOnTimeout: 'CONTINUE_DEPLOYMENT',\r\n        },\r\n      },\r\n      deploymentStyle: {\r\n        deploymentType: 'BLUE_GREEN',\r\n        deploymentOption: 'WITH_TRAFFIC_CONTROL',\r\n      },\r\n      deploymentConfigName: deploymentConfigName ?? 'CodeDeployDefault.ECSAllAtOnce',\r\n    })\r\n    .promise();\r\n\r\n  return {\r\n    PhysicalResourceId: deploymentGroupName,\r\n  };\r\n};\r\n\r\nconst onUpdate = async (event: CloudFormationCustomResourceUpdateEvent): Promise<HandlerReturn> => {\r\n  const newProps = getProperties(event.ResourceProperties);\r\n  const oldProps = getProperties(event.OldResourceProperties);\r\n\r\n  await codeDeploy\r\n    .updateDeploymentGroup({\r\n      applicationName: oldProps.applicationName,\r\n      currentDeploymentGroupName: oldProps.deploymentGroupName,\r\n      newDeploymentGroupName: newProps.deploymentGroupName,\r\n      ecsServices: newProps.ecsServices,\r\n      loadBalancerInfo: {\r\n        targetGroupPairInfoList: [\r\n          {\r\n            prodTrafficRoute: {\r\n              listenerArns: [newProps.prodTrafficListenerArn],\r\n            },\r\n            testTrafficRoute: {\r\n              listenerArns: [newProps.testTrafficListenerArn],\r\n            },\r\n            targetGroups: newProps.targetGroupNames.map((name) => ({\r\n              name,\r\n            })),\r\n          },\r\n        ],\r\n      },\r\n      autoRollbackConfiguration: {\r\n        enabled: !!newProps.autoRollbackOnEvents,\r\n        events: newProps.autoRollbackOnEvents,\r\n      },\r\n      blueGreenDeploymentConfiguration: {\r\n        terminateBlueInstancesOnDeploymentSuccess: {\r\n          action: 'TERMINATE',\r\n          terminationWaitTimeInMinutes: newProps.terminationWaitTimeInMinutes,\r\n        },\r\n        deploymentReadyOption: {\r\n          actionOnTimeout: 'CONTINUE_DEPLOYMENT',\r\n        },\r\n      },\r\n      deploymentConfigName: newProps.deploymentConfigName,\r\n    })\r\n    .promise();\r\n\r\n  return {\r\n    PhysicalResourceId: newProps.deploymentGroupName,\r\n  };\r\n};\r\n\r\nconst onDelete = async (event: CloudFormationCustomResourceDeleteEvent): Promise<void> => {\r\n  const { applicationName, deploymentGroupName } = getProperties(event.ResourceProperties);\r\n\r\n  await codeDeploy\r\n    .deleteDeploymentGroup({\r\n      applicationName,\r\n      deploymentGroupName,\r\n    })\r\n    .promise();\r\n};\r\n\r\nexport const handler = async (event: CloudFormationCustomResourceEvent): Promise<HandlerReturn | void> => {\r\n  const requestType = event.RequestType;\r\n\r\n  switch (requestType) {\r\n    case 'Create':\r\n      return onCreate(event as CloudFormationCustomResourceCreateEvent);\r\n    case 'Update':\r\n      return onUpdate(event as CloudFormationCustomResourceUpdateEvent);\r\n    case 'Delete':\r\n      return onDelete(event as CloudFormationCustomResourceDeleteEvent);\r\n    default:\r\n      throw new Error(`Invalid request type: ${requestType}`);\r\n  }\r\n};\r\n"],"sourceRoot":""}